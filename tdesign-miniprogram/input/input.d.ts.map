{"version":3,"sources":["../src/input/input.ts"],"names":[],"mappings":"AAQA,OAAO,EAAE,cAAc,EAAe,MAAM,qBAAqB,CAAC;AASlE,MAAM,CAAC,OAAO,OAAO,KAAM,SAAQ,cAAc;IAC/C,OAAO;;MAEL;IAEF,eAAe,WAA4E;IAE3F,UAAU,gCAAS;IAEnB,IAAI;;;;;MAKF;IAGF,SAAS;;MAIP;IAEF,OAAO;;;;;;MAuCL;CACH","file":"input.d.ts","sourcesContent":["/*\n * @Author: rileycai\n * @Date: 2021-09-21 19:10:10\n * @LastEditTime: 2021-09-28 10:26:57\n * @LastEditors: Please set LastEditors\n * @Description: textarea从input组件拆分出去\n * @FilePath: /tdesign-miniprogram/src/input/input.ts\n */\nimport { SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\nimport { getCharacterLength } from '../common/utils';\n\nconst { prefix } = config;\nconst name = `${prefix}-input`;\n\n@wxComponent()\nexport default class Input extends SuperComponent {\n  options = {\n    multipleSlots: true, // 在组件定义时的选项中启用多slot支持\n  };\n\n  externalClasses = ['t-class', 't-class-input', 't-class-placeholder', 't-class-error-msg'];\n\n  properties = props;\n\n  data = {\n    inputValue: '',\n    classPrefix: name,\n    classBasePrefix: prefix,\n    characterLength: 0,\n  };\n\n  /* 组件生命周期 */\n  lifetimes = {\n    ready() {\n      this.setData({ inputValue: this.data.value });\n    },\n  };\n\n  methods = {\n    onInput(event) {\n      const { value } = event.detail;\n      const { maxcharacter } = this.properties;\n      if (maxcharacter && maxcharacter > 0 && !Number.isNaN(maxcharacter)) {\n        const { characters = '', length = 0 } = getCharacterLength(value, maxcharacter);\n        this.setData({\n          value: characters,\n          characterLength: length,\n        });\n      } else {\n        this.setData({ inputValue: value });\n      }\n\n      this.triggerEvent('change', {\n        ...event.detail,\n      });\n    },\n    onFocus(event) {\n      this.triggerEvent('focus', {\n        ...event.detail,\n      });\n    },\n    onBlur(event) {\n      this.triggerEvent('blur', {\n        ...event.detail,\n      });\n    },\n    onConfirm(event) {\n      this.triggerEvent('enter', {\n        ...event.detail,\n      });\n    },\n    clearInput(event) {\n      this.setData({ inputValue: '', value: '' });\n      this.triggerEvent('clear', {\n        ...event.detail,\n      });\n    },\n  };\n}\n"]}