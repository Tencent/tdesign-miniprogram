{"version":3,"sources":["../src/radio-group/radio-group.ts"],"names":[],"mappings":"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","file":"radio-group.js","sourcesContent":["import config from '../common/config';\nimport { SuperComponent, wxComponent } from '../common/src/index';\nimport Props from '../radio/radio-group-props';\n\nconst { prefix } = config;\nconst name = `${prefix}-radio-group`;\n\n@wxComponent()\nexport default class RadioGroup extends SuperComponent {\n  externalClasses = [`${prefix}-class`];\n\n  data = {\n    prefix,\n    classPrefix: name,\n    radioOptions: [],\n  };\n\n  relations = {\n    '../radio/radio': {\n      type: 'descendant' as 'descendant',\n      linked(target) {\n        const { value, disabled } = this.data;\n        target.setData({\n          checked: value === target.data.value,\n        });\n        target.setDisabled(disabled);\n      },\n    },\n  };\n\n  properties = {\n    ...Props,\n  };\n\n  controlledProps = [\n    {\n      key: 'value',\n      event: 'change',\n    },\n  ];\n\n  lifetimes = {\n    attached() {\n      this.initWithOptions();\n    },\n  };\n\n  observers = {\n    value() {\n      this.getChilds().forEach((item) => {\n        item.setData({\n          checked: this.data.value === item.data.value,\n        });\n      });\n    },\n  };\n\n  methods = {\n    getChilds() {\n      let items = this.getRelationNodes('../radio/radio');\n      if (!items.length) {\n        items = this.selectAllComponents(`.${prefix}-radio-option`);\n      }\n      return items;\n    },\n\n    updateValue(value) {\n      this._trigger('change', { value });\n    },\n\n    handleRadioChange(e) {\n      const { value } = e.target.dataset;\n\n      this.updateValue(value);\n    },\n\n    // 支持自定义options\n    initWithOptions() {\n      const { options } = this.data;\n      // 数字数组｜字符串数组｜对像数组\n      if (!options?.length || !Array.isArray(options)) {\n        return;\n      }\n      const optionsValue = [];\n      try {\n        options.forEach((element) => {\n          const typeName = typeof element;\n          if (typeName === 'number' || typeName === 'string') {\n            optionsValue.push({\n              label: `${element}`,\n              value: element,\n            });\n          } else if (typeName === 'object') {\n            optionsValue.push({\n              ...element,\n            });\n          }\n        });\n        this.setData({\n          radioOptions: optionsValue,\n        });\n      } catch (error) {\n        console.error('error', error);\n      }\n    },\n  };\n}\n"]}