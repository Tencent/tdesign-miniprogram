{"version":3,"sources":["../src/radio-group/radio-group.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,cAAc,EAAe,MAAM,qBAAqB,CAAC;AAOlE,MAAM,CAAC,OAAO,OAAO,UAAW,SAAQ,cAAc;IACpD,eAAe,WAAuB;IAEtC,IAAI;;;;MAIF;IAEF,SAAS;;;;;MAOP;IAEF,UAAU,4CAAS;IAEnB,SAAS;;MAIP;IAEF,SAAS;;MAIP;IAEF,OAAO;;;;;;MA2EL;CACH","file":"radio-group.d.ts","sourcesContent":["import config from '../common/config';\nimport { SuperComponent, wxComponent } from '../common/src/index';\nimport Props from '../radio/radio-group-props';\n\nconst { prefix } = config;\nconst name = `${prefix}-radio-group`;\n\n@wxComponent()\nexport default class RadioGroup extends SuperComponent {\n  externalClasses = [`${prefix}-class`];\n\n  data = {\n    prefix,\n    classPrefix: name,\n    radioOptions: [],\n  };\n\n  relations = {\n    '../radio/radio': {\n      type: 'descendant' as 'descendant',\n      linked() {\n        this.updateChildren();\n      },\n    },\n  };\n\n  properties = Props;\n\n  lifetimes = {\n    attached() {\n      this.handleCreateMulRadio();\n    },\n  };\n\n  observers = {\n    value: function () {\n      this.updateChildren();\n    },\n  };\n\n  methods = {\n    updateChildren() {\n      let items = this.getRelationNodes('../radio/radio');\n      if (!items.length) {\n        items = this.selectAllComponents(`.${prefix}-radio-option`);\n      }\n      const { value, disabled } = this.data;\n      if (items.length > 0) {\n        items.forEach((item) => {\n          item.changeActive(value === item.data.value);\n          item.setDisabled(disabled);\n        });\n      }\n    },\n    updateValue(item) {\n      this.setData({\n        value: item.name,\n      });\n      this.updateChildren();\n      this.triggerEvent('change', item.name);\n    },\n    // 处理 group选项\n    handleGroupSelect(e) {\n      const { name } = e.detail;\n      this.setData({\n        value: name,\n      });\n      this.triggerEvent('change', name);\n      const items = this.selectAllComponents(`.${prefix}-radio-option`);\n      if (items.length > 0) {\n        items.forEach((item) => {\n          item.changeActive(name === item.data.value);\n        });\n      }\n    },\n    // 设置option选项\n    handleOptionLinked() {\n      const items = this.selectAllComponents(`.${prefix}-radio-option`);\n      if (this.data.radioOptions.length) {\n        items.forEach((item) => {\n          item.setOptionLinked(true);\n        });\n      }\n    },\n    // 支持自定义options\n    handleCreateMulRadio() {\n      const { options } = this.data;\n      // 数字数组｜字符串数组｜对像数组\n      if (!options?.length || !Array.isArray(options)) {\n        return;\n      }\n      const optionsValue = [];\n      try {\n        options.forEach((element) => {\n          const typeName = typeof element;\n          if (typeName === 'number' || typeName === 'string') {\n            optionsValue.push({\n              label: `${element}`,\n              value: element,\n            });\n          } else if (typeName === 'object') {\n            optionsValue.push({\n              ...element,\n            });\n          }\n        });\n        this.setData({\n          radioOptions: optionsValue,\n        });\n        this.handleOptionLinked();\n        this.updateChildren();\n      } catch (error) {\n        console.error('error', error);\n      }\n    },\n  };\n}\n"]}