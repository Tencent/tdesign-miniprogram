{"version":3,"sources":["../src/common/src/control.ts"],"names":[],"mappings":"AAgDA,MAAM,aAAa,GAAkB;IACnC,QAAQ,EAAE,OAAO;IACjB,eAAe,EAAE,cAAc;IAC/B,eAAe,EAAE,QAAQ;IACzB,MAAM,EAAE,IAAI;CACb,CAAC;AACF;;;;;;;;;;;;;;;GAeG;AACH,SAAS,UAAU,CAAY,SAAwB,EAAE;IACvD,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,eAAe,EAAE,MAAM,EAAE,mCACvD,aAAa,GACb,MAAM,CACV,CAAC;IACF,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;IACpC,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC9B,yCAAyC;IACzC,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChE,IAAI,UAAU,GAAG,KAAK,CAAC;IACvB,uBAAuB;IACvB,IAAI,MAAM,IAAI,OAAO,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,IAAI,EAAE;QAC5D,UAAU,GAAG,IAAI,CAAC;KACnB;IACD,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,MAAO,EAAE,EAAG,EAAE,EAAE;QACnC,IAAI,CAAC,OAAO,iBAER,CAAC,IAAI,QAAQ,EAAE,CAAC,EAAE,MAAM,IACrB,MAAM,GAEX,EAAE,CACH,CAAC;IACJ,CAAC,CAAC;IACF,OAAO;QACL,UAAU;QACV,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY;QAC5C,GAAG;QACH,GAAG,EAAE,GAAG,EAAE;YACR,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAC;QACnC,CAAC;QACD,MAAM,EAAE,CAAC,MAAM,EAAE,gBAAgB,EAAE,cAAc,EAAE,EAAE;YACnD,IAAI,CAAC,YAAY,CACf,eAAe,EACf,OAAO,gBAAgB,KAAK,WAAW,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,MAAM,CACpE,CAAC;YACF,iCAAiC;YACjC,IAAI,UAAU,EAAE;gBACd,OAAO;aACR;YACD,IAAI,OAAO,cAAc,KAAK,UAAU,EAAE;gBACxC,cAAc,EAAE,CAAC;aAClB;iBAAM;gBACL,GAAG,CAAC,MAAM,CAAC,CAAC;aACb;QACH,CAAC;KACF,CAAC;AACJ,CAAC;AAED,OAAO,EAAkC,UAAU,EAAE,CAAC","file":"control.js","sourcesContent":["type ControlInstance = {\n  /**\n   * 受控状态\n   */\n  controlled: boolean;\n  /**\n   * 初始值\n   */\n  initValue: any;\n  /**\n   * 更新受控属性值\n   * @param val 新值\n   * @param extObj 其他待更新数据\n   * @param fn 更新成功回调函数\n   */\n  set(newVal: any, extObj?: Object, fn?: any): void;\n  /**\n   * 返回受控属性值\n   */\n  get(): any;\n  /**\n   * 触发受控属性更新\n   * @param newVal 新值\n   * @param customChangeData 自定义change数据，默认同newVal\n   * @param customUpdateFn 自定义更新函数，默认使用set()\n   */\n  change(newVal: any, customChangeData?: any, customUpdateFn?: any): void;\n};\n\ntype ControlOption = {\n  /**\n   * 自定义value的key。默认为value\n   */\n  valueKey?: string;\n  /**\n   * 自定义value默认值的key。默认为defaultValue\n   */\n  defaultValueKey?: string;\n  /**\n   * 自定义change事件名称。默认为change\n   */\n  changeEventName?: string;\n  /**\n   * 是否严格受控。默认true为完全受控模式。半受控模式为false。\n   */\n  strict?: boolean;\n};\n\nconst defaultOption: ControlOption = {\n  valueKey: 'value',\n  defaultValueKey: 'defaultValue',\n  changeEventName: 'change',\n  strict: true,\n};\n/**\n * 受控函数\n * 用法示例：\n * {\n *  attached() {\n *    this.control = useControl.call(this);\n *  }\n * }\n * 注意事项：\n * 1：命名规范：约束value等命名，一般不需要改。内部属性统一命名以_开头。\n * 2：value默认值：小程序number类型未传值（undefined）会初始化为0，导致无法判断。建议默认值设置为null\n * 3：prop变化：需要开发者自己监听，observers = { value(val):{ this.control.set(val) } }\n * @param this 页面实例\n * @param option 配置项 参见ControlOption\n * @returns\n */\nfunction useControl(this: any, option: ControlOption = {}): ControlInstance {\n  const { valueKey, defaultValueKey, changeEventName, strict } = {\n    ...defaultOption,\n    ...option,\n  };\n  const props = this.properties || {};\n  const value = props[valueKey];\n  // 半受控时，不需要defaultValueKey，默认值与valueKey相同\n  const defaultValue = props[strict ? defaultValueKey : valueKey];\n  let controlled = false;\n  // 完全受控模式：检查受控属性，判断是否受控\n  if (strict && typeof value !== 'undefined' && value !== null) {\n    controlled = true;\n  }\n  const set = (newVal, extObj?, fn?) => {\n    this.setData(\n      {\n        [`_${valueKey}`]: newVal,\n        ...extObj,\n      },\n      fn,\n    );\n  };\n  return {\n    controlled,\n    initValue: controlled ? value : defaultValue,\n    set,\n    get: () => {\n      return this.data[`_${valueKey}`];\n    },\n    change: (newVal, customChangeData, customUpdateFn) => {\n      this.triggerEvent(\n        changeEventName,\n        typeof customChangeData !== 'undefined' ? customChangeData : newVal,\n      );\n      // 完全受控模式，使用了受控属性，必须配合change事件来更新\n      if (controlled) {\n        return;\n      }\n      if (typeof customUpdateFn === 'function') {\n        customUpdateFn();\n      } else {\n        set(newVal);\n      }\n    },\n  };\n}\n\nexport { ControlOption, ControlInstance, useControl };\n"]}