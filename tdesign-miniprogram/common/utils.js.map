{"version":3,"sources":["../src/common/utils.ts"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["export const debounce = function (func, wait = 500) {\n  let timerId;\n  return function (...rest) {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      func.apply(this, rest);\n    }, wait);\n  };\n};\n\nexport const classNames = function (...args) {\n  const hasOwn = {}.hasOwnProperty;\n  const classes = [];\n\n  args.forEach((arg) => {\n    // for (let i = 0; i < args.length; i++) {\n    // eslint-disable-next-line\n    // const arg = args[i]\n    if (!arg) return;\n\n    const argType = typeof arg;\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg);\n    } else if (Array.isArray(arg) && arg.length) {\n      const inner = classNames(...arg);\n      if (inner) {\n        classes.push(inner);\n      }\n    } else if (argType === 'object') {\n      // eslint-disable-next-line\n      for (const key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key);\n        }\n      }\n    }\n  });\n\n  return classes.join(' ');\n};\n\nexport const styles = function (styleObj) {\n  return Object.keys(styleObj)\n    .map((styleKey) => `${styleKey}: ${styleObj[styleKey]}`)\n    .join('; ');\n};\n\nexport const requestAnimationFrame = function (cb: Function) {\n  return wx\n    .createSelectorQuery()\n    .selectViewport()\n    .boundingClientRect()\n    .exec(() => {\n      cb();\n    });\n};\n\nconst isDef = function (value: any): boolean {\n  return value !== undefined && value !== null;\n};\n\nexport const isNumber = function (value) {\n  return /^\\d+(\\.\\d+)?$/.test(value);\n};\n\nexport const addUnit = function (value?: string | number): string | undefined {\n  if (!isDef(value)) {\n    return undefined;\n  }\n  value = String(value);\n  return isNumber(value) ? `${value}px` : value;\n};\n\n/**\n * 计算字符串字符的长度并可以截取字符串。\n * @param str 传入字符串\n * @param maxCharacter 规定最大字符串长度\n * @returns 当没有传入maxCharacter时返回字符串字符长度，当传入maxCharacter时返回截取之后的字符串和长度。\n */\nexport const getCharacterLength = (\n  str: string,\n  maxCharacter?: number,\n): { length: number; characters: string } => {\n  const hasMaxCharacter = typeof maxCharacter === 'number';\n  if (!str || str.length === 0) {\n    if (hasMaxCharacter) {\n      return {\n        length: 0,\n        characters: str,\n      };\n    }\n    return {\n      length: 0,\n      characters: '',\n    };\n  }\n  let len = 0;\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0; i < str.length; i++) {\n    let currentStringLength = 0;\n    if (str.charCodeAt(i) > 127 || str.charCodeAt(i) === 94) {\n      currentStringLength = 2;\n    } else {\n      currentStringLength = 1;\n    }\n    if (hasMaxCharacter && len + currentStringLength > maxCharacter) {\n      return {\n        length: len,\n        characters: str.slice(0, i),\n      };\n    }\n    len += currentStringLength;\n  }\n  if (hasMaxCharacter) {\n    return {\n      length: len,\n      characters: str,\n    };\n  }\n  return {\n    length: len,\n    characters: '',\n  };\n};\n"]}