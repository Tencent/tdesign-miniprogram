{"version":3,"sources":["../src/upload/upload.ts"],"names":[],"mappings":"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","file":"upload.js","sourcesContent":["import { isObject, SuperComponent, wxComponent } from '../common/src/index';\nimport props from './props';\nimport { MediaType, UploadMpConfig, UploadFile } from './type';\nimport config from '../common/config';\n\nconst { prefix } = config;\nconst name = `${prefix}-upload`;\n@wxComponent()\nexport default class Upload extends SuperComponent {\n  externalClasses = [`${prefix}-class`];\n\n  options = {\n    multipleSlots: true,\n  };\n\n  data = {\n    classPrefix: name,\n    prefix,\n    current: false,\n    proofs: [],\n    customFiles: [] as UploadFile[], // 内部动态修改的files\n    customLimit: 0, // 内部动态修改的limit\n    mediaType: [] as MediaType[], // 这里由于小程序api问题目前不支持同时上传视频和图片\n    // 以下是声明properties\n    config: {} as UploadMpConfig,\n    files: [] as UploadFile[],\n    max: 0,\n    sizeLimit: 0,\n    requestMethod: null,\n    gridItemStyle: '',\n    column: 4,\n  };\n\n  properties = props;\n\n  observers = {\n    files(files: UploadFile) {\n      this.handleLimit(files, this.data.max);\n    },\n    max(max) {\n      this.handleLimit(this.data.customFiles, max);\n    },\n    gridConfig() {\n      this.updateGrid();\n    },\n  };\n\n  onProofTap(e: any) {\n    const { index } = e.currentTarget.dataset;\n    wx.previewImage({\n      urls: this.data.customFiles.filter((file) => file.percent !== -1).map((file) => file.url),\n      current: this.data.customFiles[index]?.url,\n    });\n  }\n\n  ready() {\n    this.handleLimit(this.data.customFiles, this.data.max);\n    this.updateGrid();\n  }\n\n  handleLimit(customFiles: UploadFile[], max: number) {\n    while (max !== 0 && customFiles.length - max > 0) {\n      customFiles.pop();\n    }\n    const proofs = [];\n    customFiles.forEach((item: UploadFile) => {\n      if (item.type !== 'video') {\n        proofs.push(item.url);\n      }\n    });\n    this.setData({\n      customFiles: customFiles,\n      proofs,\n      customLimit: max === 0 ? Number.MAX_SAFE_INTEGER : max - customFiles.length,\n    });\n  }\n\n  uploadFiles(files: UploadFile[]) {\n    return new Promise((resolve) => {\n      // 开始调用上传函数\n      const task = this.data.requestMethod(files);\n      if (task instanceof Promise) {\n        return task;\n      }\n      resolve({});\n    });\n  }\n\n  startUpload(files: UploadFile[]) {\n    // 如果传入了上传函数，则进度设为0并开始上传，否则跳过上传\n    if (typeof this.data.requestMethod === 'function') {\n      return this.uploadFiles(files);\n    }\n    this.handleLimit(this.data.customFiles, this.data.max);\n    return Promise.resolve();\n  }\n\n  /** 选择图片 */\n  chooseImg() {\n    const { config, max, sizeLimit } = this.data;\n    wx.chooseImage({\n      count: max,\n      ...config,\n      success: (res) => {\n        const tempFiles = [];\n        res.tempFiles.forEach((temp) => {\n          if (sizeLimit && temp.size > sizeLimit) {\n            wx.showToast({ icon: 'none', title: '图片大小超过限制' });\n            return;\n          }\n          const name = this.getRandFileName(temp.path);\n          tempFiles.push({\n            name,\n            type: 'image',\n            url: temp.path,\n            size: temp.size,\n            progress: 0,\n          });\n        });\n        this.triggerEvent('success', res);\n        this.startUpload(tempFiles);\n      },\n      fail: (err) => {\n        this.triggerEvent('fail', err);\n      },\n      complete: (res) => {\n        this.triggerEvent('complete', res);\n      },\n    });\n  }\n\n  /** 选择视频 */\n  chooseVideo() {\n    const { config } = this.data;\n    wx.chooseVideo({\n      ...config,\n      success: (res) => {\n        if (this.data.sizeLimit && res.size > this.data.sizeLimit) {\n          wx.showToast({ icon: 'none', title: '视频大小超过限制' });\n          return;\n        }\n        this.triggerEvent('success', res);\n        this.startUpload(this.data.customFiles);\n      },\n      fail: (err) => {\n        this.triggerEvent('fail', err);\n      },\n      complete: (res) => {\n        this.triggerEvent('complete', res);\n      },\n    });\n  }\n\n  // 选中文件之后，计算一个随机的短文件名\n  getRandFileName(filePath) {\n    const extIndex = filePath.lastIndexOf('.');\n    const extName = extIndex === -1 ? '' : filePath.substr(extIndex);\n    return (\n      parseInt(`${Date.now()}${Math.floor(Math.random() * 900 + 100)}`, 10).toString(36) + extName\n    );\n  }\n\n  closePop() {\n    this.setData({ showPop: false });\n  }\n\n  onAddTap() {\n    const { mediaType } = this.data;\n    // if (mediaType.length > 1) {\n    //   this.setData({ showPop: true });\n    //   return;\n    // }\n\n    switch (mediaType[0]) {\n      case 'video':\n        this.chooseVideo();\n        break;\n      case 'image':\n        this.chooseImg();\n        break;\n      default:\n        // 后续可能有file等类型\n        break;\n    }\n  }\n\n  onChooseImage() {\n    this.chooseImg();\n    // this.setData({ showPop: false });\n  }\n\n  onChooseVideo() {\n    this.chooseVideo();\n    // this.setData({ showPop: false });\n  }\n\n  onDelete(e: any) {\n    const { index } = e.currentTarget.dataset;\n    this.deleteHandle(index);\n  }\n\n  deleteHandle(index: number) {\n    const { customFiles } = this.data;\n    const delFile = customFiles[index];\n    this.triggerEvent('remove', { index, file: delFile });\n  }\n\n  updateGrid() {\n    let { gridConfig = {} } = this.properties;\n    if (!isObject(gridConfig)) gridConfig = {};\n    const { column = 4, width = 160, height = 160 } = gridConfig as any;\n    this.setData({\n      gridItemStyle: `width:${width}rpx;height:${height}rpx`,\n      column: column,\n    });\n  }\n}\n"]}