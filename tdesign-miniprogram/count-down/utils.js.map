{"version":3,"sources":["../src/count-down/utils.ts"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["export interface TimeData {\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n  milliseconds: number;\n}\n\nconst SECOND = 1000;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\nconst DAY = 24 * HOUR;\n\nexport const parseTimeData = function (time: number): TimeData {\n  const days = Math.floor(time / DAY);\n  const hours = Math.floor((time % DAY) / HOUR);\n  const minutes = Math.floor((time % HOUR) / MINUTE);\n  const seconds = Math.floor((time % MINUTE) / SECOND);\n  const milliseconds = Math.floor(time % SECOND);\n  return {\n    days,\n    hours,\n    minutes,\n    seconds,\n    milliseconds,\n  };\n};\n\nexport const isSameSecond = function (time1: number, time2: number): boolean {\n  return Math.floor(time1 / 1000) === Math.floor(time2 / 1000);\n};\n\nexport type TTimeList = { digit: string; unit: string; match: string }[];\n\n/**\n *\n * @param time 倒计时时间，毫秒单位\n * @param format 倒计时格式化字符串，例如：dd天hh小时mm分ss秒SSS毫秒，hh:mm:ss.SSS，hh:mm:ss\n */\nexport const parseFormat = function (time: number, format: string) {\n  const obj = {\n    'D+': Math.floor(time / 86400000), // 日\n    'H+': Math.floor((time % 86400000) / 3600000), // 小时\n    'm+': Math.floor((time % 3600000) / 60000), // 分\n    's+': Math.floor((time % 60000) / 1000), // 秒\n    'S+': Math.floor(time % 1000), // 毫秒\n  };\n  const timeList: TTimeList = [];\n  let timeText = format;\n\n  Object.keys(obj).forEach((prop) => {\n    if (new RegExp(`(${prop})`).test(timeText)) {\n      timeText = timeText.replace(RegExp.$1, (match, offset, source) => {\n        const v = `${(obj as any)[prop]}`;\n        let digit = v;\n        if (match.length > 1) {\n          digit = (match.replace(new RegExp(match[0], 'g'), '0') + v).substr(v.length);\n        }\n        const unit = source.substr(offset + match.length);\n        const last = timeList[timeList.length - 1];\n        if (last) {\n          const index = last.unit.indexOf(match);\n          if (index !== -1) {\n            last.unit = last.unit.substr(0, index);\n          }\n        }\n        timeList.push({ digit, unit, match });\n        return digit;\n      });\n    }\n  });\n  return { timeText, timeList };\n};\n"]}