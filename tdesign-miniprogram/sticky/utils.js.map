{"version":3,"sources":["../src/sticky/utils.ts"],"names":[],"mappings":"AAAA,MAAM,cAAc,GAAG;IACrB,MAAM,KAAK,GAAG,eAAe,EAAE,CAAC;IAChC,OAAO,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAA+C,CAAC;AAC/E,CAAC,CAAC;AAQF,MAAM,YAAY,GAAG,UAAU,KAAyB;IACtD,MAAM,EAAE,YAAY,GAAG,EAAE,EAAE,GAAG,cAAc,EAExC,CAAC;IAEL,YAAY,CAAC,OAAO,CAAC,CAAC,QAAkB,EAAE,EAAE;QAC1C,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;YAClC,aAAa;YACb,QAAQ,CAAC,KAAK,CAAC,CAAC;SACjB;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,QAAkB,EAAE,EAAE,CACpD,QAAQ,CAAC;IACP,QAAQ;QACN,MAAM,IAAI,GAAG,cAAc,EAAgC,CAAC;QAE5D,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YACpC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC7C;aAAM;YACL,IAAI,CAAC,YAAY;gBACf,OAAO,IAAI,CAAC,YAAY,KAAK,UAAU;oBACrC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACrD,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC7B;QAED,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAED,QAAQ;;QACN,MAAM,IAAI,GAAG,cAAc,EAAgC,CAAC;QAC5D,IAAI,CAAC,YAAY,GAAG,CAAA,MAAA,IAAI,CAAC,YAAY,0CAAE,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,QAAQ,CAAC,KAAI,EAAE,CAAC;IACnF,CAAC;CACF,CAAC,CAAC;AAEL,MAAM,CAAC,MAAM,OAAO,GAAG,UAAU,OAAY,EAAE,QAAgB;IAC7D,OAAO,IAAI,OAAO,CAAqD,CAAC,OAAO,EAAE,EAAE;QACjF,EAAE,CAAC,mBAAmB,EAAE;aACrB,EAAE,CAAC,OAAO,CAAC;aACX,MAAM,CAAC,QAAQ,CAAC;aAChB,kBAAkB,EAAE;aACpB,IAAI,CAAC,CAAC,IAAI,GAAG,EAAE,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","file":"utils.js","sourcesContent":["const getCurrentPage = function <T>() {\n  const pages = getCurrentPages();\n  return pages[pages.length - 1] as T & WechatMiniprogram.Page.TrivialInstance;\n};\n\ntype IPageScrollOption = WechatMiniprogram.Page.IPageScrollOption;\ntype Scroller = (\n  this: WechatMiniprogram.Component.TrivialInstance,\n  event?: IPageScrollOption,\n) => void;\n\nconst onPageScroll = function (event?: IPageScrollOption) {\n  const { pageScroller = [] } = getCurrentPage<{\n    pageScroller: Scroller[];\n  }>();\n\n  pageScroller.forEach((scroller: Scroller) => {\n    if (typeof scroller === 'function') {\n      // @ts-ignore\n      scroller(event);\n    }\n  });\n};\n\nexport const pageScrollMixin = (scroller: Scroller) =>\n  Behavior({\n    attached() {\n      const page = getCurrentPage<{ pageScroller: Scroller[] }>();\n\n      if (Array.isArray(page.pageScroller)) {\n        page.pageScroller.push(scroller.bind(this));\n      } else {\n        page.pageScroller =\n          typeof page.onPageScroll === 'function'\n            ? [page.onPageScroll.bind(page), scroller.bind(this)]\n            : [scroller.bind(this)];\n      }\n\n      page.onPageScroll = onPageScroll;\n    },\n\n    detached() {\n      const page = getCurrentPage<{ pageScroller: Scroller[] }>();\n      page.pageScroller = page.pageScroller?.filter((item) => item !== scroller) || [];\n    },\n  });\n\nexport const getRect = function (context: any, selector: string) {\n  return new Promise<WechatMiniprogram.BoundingClientRectCallbackResult>((resolve) => {\n    wx.createSelectorQuery()\n      .in(context)\n      .select(selector)\n      .boundingClientRect()\n      .exec((rect = []) => resolve(rect[0]));\n  });\n};\n"]}