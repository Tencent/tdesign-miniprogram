{"version":3,"sources":["../src/avatar/avatar-group.ts"],"names":[],"mappings":"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","file":"avatar-group.js","sourcesContent":["import { SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport avatarGroupProps from './avatar-group-props';\n\nconst { prefix } = config;\nconst name = `${prefix}-avatar-group`;\n\n@wxComponent()\nexport default class AvatarGroup extends SuperComponent {\n  externalClasses = [`${prefix}-class`];\n\n  properties = avatarGroupProps;\n\n  data = {\n    prefix,\n    classPrefix: name,\n    hasChild: true,\n    length: 0,\n  };\n\n  options = {\n    multipleSlots: true,\n  };\n\n  relations = {\n    './avatar': {\n      type: 'descendant' as 'descendant',\n      linked(this: AvatarGroup) {\n        this.children = this.getRelationNodes('./avatar');\n      },\n    },\n  };\n\n  ready() {\n    this.setData({\n      length: this.children.length,\n    });\n    this.handleHasChild(this.children, this.data.hasChild);\n    this.handleChildSlot(this.properties.max, this.children, this.handleChildMax);\n    this.handleChildSize(this.properties.size, this.children);\n    this.handleChildCascading(this.properties.cascading, this.children);\n  }\n\n  methods = {\n    /**\n     * @param children avatar-group的所有avatar子节点\n     * @param hasChild 是否为子节点（slot插槽以及默认的avatar折叠元素没有parent）\n     * @description\n     */\n    handleHasChild(children, hasChild) {\n      children.forEach((child) => {\n        child.updateIsChild(hasChild);\n      });\n    },\n    /**\n     *\n     * @param max 最大avatar数量\n     * @param children avatar-group的所有avatar子节点\n     * @param f handleChildMax函数\n     * @description 判断是否传入自定义折叠元素\n     */\n    handleChildSlot(max, children, f) {\n      const query = this.createSelectorQuery();\n      const slotName = `.${this.data.classPrefix}__collapse--slot`;\n      query.select(slotName).boundingClientRect();\n      query.exec((res) => {\n        const isSlot = !!res[0].width;\n        f(max, children, isSlot);\n      });\n    },\n\n    /**\n     *\n     * @param max 最大avatar数量\n     * @param children avatar-group的所有avatar子节点\n     * @param isSlotElement 是否传入自定义折叠元素（res[0].width不为空表示传入）\n     * @description avatar-group的最大数量处理\n     *              + 如果未传入自定义折叠元素，当超出max数量时，显示默认折叠元素\n     */\n    handleChildMax(max, children, isSlotElement) {\n      const len = children.length;\n      if (!max || max > len) return;\n\n      const slotElement = isSlotElement ? children.pop() : '';\n      const leftChildren = children.splice(max, len - max, isSlotElement && slotElement);\n\n      leftChildren.forEach((child) => {\n        child.updateShow();\n      });\n    },\n\n    /**\n     * @param size 尺寸，优先级低于avatar自身设置的size\n     * @param children avatar-group的所有avatar子节点\n     * @description 更新avatar节点的size属性\n     */\n    handleChildSize(size, children) {\n      if (!size) return;\n      children.forEach((child) => {\n        child.updateSize(size);\n      });\n    },\n\n    /**\n     * @param cascading 层叠关系\n     * @param children avatar-group的所有avatar子节点\n     * @description 右侧图片在上可用css直接实现，左侧图片在上，通过设置z-index实现\n     */\n    handleChildCascading(cascading, children) {\n      if (cascading === 'right-up') return;\n\n      const defaultZIndex = 100;\n      children.forEach((child, index) => {\n        child.updateCascading(defaultZIndex - index * 10);\n      });\n    },\n  };\n}\n"]}