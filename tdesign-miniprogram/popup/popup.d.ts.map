{"version":3,"sources":["../src/popup/popup.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AACtC,OAAO,EAAE,cAAc,EAAe,MAAM,qBAAqB,CAAC;AAKlE,oBAAY,UAAU,GAAG,YAAY,CAAC;AAWtC,MAAM,CAAC,OAAO,OAAO,KAAM,SAAQ,cAAc;IAC/C,eAAe,WAAqD;IAEpE,OAAO;;;MAGL;IAEF,UAAU,eAAS;IAEnB,IAAI;;;;;;;;;MAKF;IAEF,SAAS;;MAKP;IAEF,QAAQ;IAUR,kBAAkB;IAclB,cAAc;IAOd,YAAY;IAIZ,YAAY;CACb","file":"popup.d.ts","sourcesContent":["import { TdPopupProps } from './type';\nimport { SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\nimport { classNames } from '../common/utils';\n\nexport type PopupProps = TdPopupProps;\n\nconst { prefix } = config;\nconst name = `${prefix}-popup`;\nconst defaultTransitionProps = {\n  name: `${name}--transition`,\n  durations: [300, 300],\n  appear: false,\n};\n\n@wxComponent()\nexport default class Popup extends SuperComponent {\n  externalClasses = ['t-class', 't-class-overlay', 't-class-content'];\n\n  options = {\n    multipleSlots: true, // 多slot支持\n    styleIsolation: 'shared' as const,\n  };\n\n  properties = props;\n\n  data = {\n    prefix,\n    classPrefix: name,\n    className: name,\n    dataTransitionProps: { ...defaultTransitionProps },\n  };\n\n  lifetimes = {\n    attached() {\n      this.setClass();\n      this.setTransitionProps();\n    },\n  };\n\n  setClass() {\n    const { placement, showOverlay } = this.properties;\n    const className = classNames(name, 't-class', `${name}--position-${placement}`, {\n      [`${name}--overlay-transparent`]: !showOverlay,\n    });\n    this.setData({\n      className,\n    });\n  }\n\n  setTransitionProps() {\n    if (!this.properties.transitionProps) {\n      return;\n    }\n    const transitionProps = {\n      ...defaultTransitionProps,\n      ...this.properties.transitionProps,\n    };\n\n    this.setData({\n      dataTransitionProps: transitionProps,\n    });\n  }\n\n  onOverlayClick() {\n    const { closeOnOverlayClick } = this.properties;\n    if (closeOnOverlayClick) {\n      this.triggerEvent('visible-change', { visiable: false });\n    }\n  }\n\n  onCloseClick() {\n    this.triggerEvent('visible-change', { visiable: false });\n  }\n\n  preventEvent() {}\n}\n"]}