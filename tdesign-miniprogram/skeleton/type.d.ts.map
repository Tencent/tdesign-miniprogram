{"version":3,"sources":["../src/skeleton/type.ts"],"names":[],"mappings":"AAEA;;;KAGK;AAEL,MAAM,WAAW,eAAe;IAC9B;;OAEG;IACH,SAAS,CAAC,EAAE;QACV,IAAI,EAAE,iBAAiB,CAAC;QACxB,KAAK,CAAC,EAAE,UAAU,GAAG,SAAS,CAAC;QAC/B,QAAQ,CAAC,EAAE,OAAO,CAAC;KACpB,CAAC;IACF;;OAEG;IACH,eAAe,CAAC,EAAE;QAChB,IAAI,EAAE,gBAAgB,CAAC;QACvB,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,gBAAgB,EAAE,eAAe,EAAE,cAAc,CAAC,CAAC;QACvE,QAAQ,CAAC,EAAE,OAAO,CAAC;KACpB,CAAC;IACF;;OAEG;IACH,OAAO,CAAC,EAAE;QACR,IAAI,EAAE,kBAAkB,CAAC;QACzB,KAAK,CAAC,EAAE,OAAO,CAAC;QAChB,QAAQ,CAAC,EAAE,OAAO,CAAC;KACpB,CAAC;IACF;;;OAGG;IACH,MAAM,CAAC,EAAE;QACP,IAAI,EAAE,gBAAgB,CAAC;QACvB,KAAK,CAAC,EAAE,cAAc,CAAC;QACvB,QAAQ,CAAC,EAAE,OAAO,CAAC;KACpB,CAAC;IACF;;;OAGG;IACH,KAAK,CAAC,EAAE;QACN,IAAI,EAAE,iBAAiB,CAAC;QACxB,KAAK,CAAC,EAAE,MAAM,GAAG,aAAa,CAAC;QAC/B,QAAQ,CAAC,EAAE,OAAO,CAAC;KACpB,CAAC;CACH;AAED,oBAAY,cAAc,GAAG,KAAK,CAAC,MAAM,GAAG,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAE1F,MAAM,WAAW,iBAAiB;IAAG,KAAK,CAAC,EAAE,MAAM,CAAC;IAAC,MAAM,CAAC,EAAE,MAAM,CAAC;IAAC,WAAW,CAAC,EAAE,MAAM,CAAC;IAAC,UAAU,CAAC,EAAE,MAAM,CAAC;IAAC,MAAM,CAAC,EAAE,MAAM,CAAC;CAAE","file":"type.d.ts","sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * updated at 2021-11-24 10:58:05\n * */\n\nexport interface TdSkeletonProps {\n  /**\n   * 动画效果，有「渐变加载动画」和「闪烁加载动画」两种。值为空则表示没有动画\n   */\n  animation?: {\n    type: StringConstructor;\n    value?: 'gradient' | 'flashed';\n    required?: boolean;\n  };\n  /**\n   * 组件类名，分别用于设置组件外层元素、头像、图片、文本等元素类名\n   */\n  externalClasses?: {\n    type: ArrayConstructor;\n    value?: ['t-class', 't-class-avatar', 't-class-image', 't-class-text'];\n    required?: boolean;\n  };\n  /**\n   * 是否为加载状态，如果是则显示骨架图，如果不是则显示加载完成的内容\n   */\n  loading?: {\n    type: BooleanConstructor;\n    value?: boolean;\n    required?: boolean;\n  };\n  /**\n   * 用于设置行列数量、宽度高度、间距等。【示例一】，`[1, 1, 2]` 表示输出三行骨架图，第一行一列，第二行一列，第三行两列。【示例二】，`[1, 1, { width: '100px' }]` 表示自定义第三行的宽度为 `100px`。【示例三】，`[1, 2, [{ width, height }, { width, height, marginLeft }]]` 表示第三行有两列，且自定义宽度、高度和间距\n   * @default [1, 1, 1, { width: '70%' }]\n   */\n  rowCol?: {\n    type: ArrayConstructor;\n    value?: SkeletonRowCol;\n    required?: boolean;\n  };\n  /**\n   * 骨架图风格，有基础、头像组合等两大类\n   * @default text\n   */\n  theme?: {\n    type: StringConstructor;\n    value?: 'text' | 'avatar-text';\n    required?: boolean;\n  };\n};\n\nexport type SkeletonRowCol = Array<Number | SkeletonRowColObj | Array<SkeletonRowColObj>>;\n\nexport interface SkeletonRowColObj { width?: string; height?: string; marginRight?: string; marginLeft?: string; margin?: string; };\n"]}