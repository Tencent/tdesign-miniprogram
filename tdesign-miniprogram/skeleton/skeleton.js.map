{"version":3,"sources":["../src/skeleton/skeleton.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClE,OAAO,MAAM,MAAM,kBAAkB,CAAC;AACtC,OAAO,KAAK,MAAM,SAAS,CAAC;AAC5B,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAE3C,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;AAC1B,MAAM,IAAI,GAAG,GAAG,MAAM,WAAW,CAAC;AAGlC,IAAqB,QAAQ,GAA7B,MAAqB,QAAS,SAAQ,cAAc;IAApD;;QACE,oBAAe,GAAG,CAAC,SAAS,EAAE,gBAAgB,EAAE,cAAc,CAAC,CAAC;QAEhE,eAAU,GAAG,KAAK,CAAC;QAEnB,cAAS,GAAG;YACV,MAAM,CAAO,GAAG;gBACd,MAAM,SAAS,GAAG,EAAE,CAAC;gBACrB,MAAM,SAAS,GAAG,EAAE,CAAC;gBACrB,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBACtB,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;wBAChB,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;4BACf,MAAM,MAAM,GAAG,EAAE,CAAC;4BAClB,MAAM,YAAY,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;4BACtD,uCAAuC;4BACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gCAC1B,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;6BACvD;4BACD,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;4BACvB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBACtB;6BAAM;4BACL,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC3C,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBACvB;oBACH,CAAC,CAAC,CAAC;iBACJ;gBACD,IAAI,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;YACzC,CAAC;SACF,CAAC;QAEF,SAAI,GAAG;YACL,WAAW,EAAE,IAAI;YACjB,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;CAAA,CAAA;AAnCoB,QAAQ;IAD5B,WAAW,EAAE;GACO,QAAQ,CAmC5B;eAnCoB,QAAQ","file":"skeleton.js","sourcesContent":["import { SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport props from './props';\nimport { isNumber } from '../common/utils';\n\nconst { prefix } = config;\nconst name = `${prefix}-skeleton`;\n\n@wxComponent()\nexport default class Skeleton extends SuperComponent {\n  externalClasses = ['t-class', 't-class-avatar', 't-class-text'];\n\n  properties = props;\n\n  observers = {\n    rowCol(this, val) {\n      const rowStyles = [];\n      const isNumList = [];\n      if (Array.isArray(val)) {\n        val.forEach((v) => {\n          if (isNumber(v)) {\n            const curArr = [];\n            const defaultWidth = `${(686 - 32 * (v - 1)) / v}rpx`;\n            // eslint-disable-next-line no-plusplus\n            for (let i = 0; i < v; i++) {\n              curArr.push({ width: defaultWidth, height: '32rpx' });\n            }\n            rowStyles.push(curArr);\n            isNumList.push(true);\n          } else {\n            rowStyles.push(Array.isArray(v) ? v : [v]);\n            isNumList.push(false);\n          }\n        });\n      }\n      this.setData({ rowStyles, isNumList });\n    },\n  };\n\n  data = {\n    classPrefix: name,\n    isNumList: [],\n    rowStyles: [],\n  };\n}\n"]}