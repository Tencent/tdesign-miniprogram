{"version":3,"sources":["../src/checkbox-group/checkbox-group.ts"],"names":[],"mappings":"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","file":"checkbox-group.js","sourcesContent":["import { SuperComponent, wxComponent } from '../common/src/index';\nimport config from '../common/config';\nimport Props from '../checkbox/checkbox-group-props';\n\nconst { prefix } = config;\nconst name = `${prefix}-checkbox-group`;\n@wxComponent()\nexport default class CheckBoxGroup extends SuperComponent {\n  externalClasses = ['t-class'];\n\n  relations = {\n    '../checkbox/checkbox': {\n      type: 'descendant' as 'descendant',\n      linked() {\n        this.updateChildren();\n      },\n    },\n  };\n\n  data = {\n    classPrefix: name,\n    checkboxOptions: [],\n  };\n\n  properties = Props;\n\n  observers = {\n    value: function () {\n      this.updateChildren('slot');\n    },\n  };\n\n  lifetimes = {\n    attached() {\n      this.handleCreateMulCheckbox();\n    },\n  };\n\n  methods = {\n    // slot插入选项\n    updateChildren(type = 'slot') {\n      let items = [];\n      if (type === 'not-slot') {\n        items = this.selectAllComponents('.t-checkbox-option');\n      } else {\n        items = this.getRelationNodes('../checkbox/checkbox');\n      }\n      const { value, disabled } = this.data;\n      if (items.length > 0) {\n        items.forEach((item: any) => {\n          !item.data.checkAll && item.changeActive(value.indexOf(item.data.value) > -1);\n          item.setDisabled(disabled);\n        });\n        // 关联可全选项\n        if (items.findIndex((item) => item.data.checkAll) > -1) {\n          items.forEach((item) => {\n            item.setOptionLinked(true);\n          });\n          this.handleHalfCheck(type, items.length);\n        }\n      }\n    },\n    updateValue({ name, checked }, type = 'slot') {\n      const { value, max } = this.data;\n      let newValue = value;\n      if (max && checked && newValue.length === max) {\n        return;\n      }\n      if (checked) {\n        newValue = newValue.concat(name);\n      } else {\n        const index = newValue.findIndex((v: string) => v === name);\n        newValue.splice(index, 1);\n      }\n      this.setData({\n        value: newValue,\n      });\n      this.updateChildren(type);\n      this.triggerEvent('change', newValue);\n    },\n    // 支持自定义options\n    handleCreateMulCheckbox() {\n      const { options } = this.data;\n      // 数字数组｜字符串数组｜对像数组\n      if (!options?.length || !Array.isArray(options)) {\n        return;\n      }\n      const optionsValue = [];\n      try {\n        options.forEach((element) => {\n          const typeName = typeof element;\n          if (typeName === 'number' || typeName === 'string') {\n            optionsValue.push({\n              label: `${element}`,\n              value: element,\n            });\n          } else if (typeName === 'object') {\n            optionsValue.push({\n              ...element,\n            });\n          }\n        });\n        this.setData({\n          checkboxOptions: optionsValue,\n        });\n        this.updateChildren('not-slot');\n      } catch (error) {\n        console.error('error', error);\n      }\n    },\n    // 处理全选\n    handleCheckAll(e) {\n      const { checked, option, name, type } = e.detail || e;\n      let items = [];\n      if (type === 'not-slot') {\n        items = this.selectAllComponents('.t-checkbox-option');\n      } else {\n        items = this.getRelationNodes('../checkbox/checkbox');\n      }\n      if (!option) {\n        if (!items?.length) {\n          return;\n        }\n        this.setData({\n          value: items\n            .map((item) => {\n              if (item.data.disabled) {\n                return '';\n              }\n              item.changeActive(checked);\n              return checked && !item.data.checkAll ? item.data.value : '';\n            })\n            .filter((val) => val),\n        });\n        this.triggerEvent('change', this.data.value);\n        this.handleHalfCheck(type, items.length);\n      } else {\n        this.updateValue({ name, checked }, type);\n      }\n    },\n    // 处理options半选\n    handleHalfCheck(type: string, len: number) {\n      let items = [];\n      if (type === 'not-slot') {\n        items = this.selectAllComponents('.t-checkbox-option');\n      } else {\n        items = this.getRelationNodes('../checkbox/checkbox');\n      }\n      const all = items.filter((i) => !i.data.checkAll).map((item) => item.data.value);\n      const currentVal = Array.from(new Set(this.data.value.filter((i) => all.indexOf(i) > -1)));\n      const element = items.find((item) => item.data.checkAll);\n      if (currentVal.length) {\n        element?.changeActive(true);\n        element?.changeCheckAllHalfStatus(currentVal.length !== len - 1);\n      } else {\n        element?.changeActive(false);\n      }\n    },\n    // 设置可全选option选项\n    handleOptionLinked() {\n      const items = this.selectAllComponents('.t-checkbox-option');\n      if (this.data.checkboxOptions.length) {\n        items.forEach((item) => {\n          item.setOptionLinked(true);\n        });\n      }\n    },\n  };\n}\n"]}