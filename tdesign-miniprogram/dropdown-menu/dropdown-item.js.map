{"version":3,"sources":["../src/dropdown-menu/dropdown-item.ts"],"names":[],"mappings":"AAAA,OAAO,UAAU,MAAM,qBAAqB,CAAC;AAC7C,OAAO,MAAM,MAAM,kBAAkB,CAAC;AAEtC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;AAC1B,MAAM,IAAI,GAAG,GAAG,MAAM,gBAAgB,CAAC;AAEvC,UAAU,CAAC;IACT,UAAU,EAAE;QACV,KAAK,EAAE;YACL,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,EAAE;SACV;QACD,OAAO,EAAE;YACP,IAAI,EAAE,KAAK;YACX,KAAK,EAAE,EAAE;SACV;QACD,UAAU,EAAE;YACV,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,QAAQ,EAAE,iBAAiB;SACnC;QACD,aAAa,EAAE;YACb,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,SAAS,EAAE,wBAAwB;SAC3C;QACD,cAAc,EAAE;YACd,IAAI,EAAE,MAAM;YACZ,aAAa,EAAE,CAAC,MAAM,CAAC;YACvB,KAAK,EAAE,CAAC;SACT;QACD,KAAK,EAAE;YACL,IAAI,EAAE,KAAK;YACX,aAAa,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;YAC/B,KAAK,EAAE,EAAE;SACV;QACD,QAAQ,EAAE;YACR,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,KAAK;SACb;QACD,MAAM,EAAE;YACN,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,EAAE;SACV;KACF;IACD,IAAI,EAAE;QACJ,eAAe,EAAE,MAAM;QACvB,WAAW,EAAE,IAAI;QACjB,IAAI,EAAE,KAAK;QACX,aAAa,EAAE,IAAI;QACnB,GAAG,EAAE,IAAI;QACT,GAAG,EAAE,CAAC;QACN,cAAc,EAAE,EAAE;QAClB,WAAW,EAAE,CAAC;QACd,QAAQ,EAAE,EAAE;QACZ,SAAS,EAAE;YACT,SAAS,EAAE,CAAC;YACZ,UAAU,EAAE,EAAE;YACd,MAAM,EAAE,EAAE;SACX;QACD,WAAW,EAAE,EAAE;QACf,MAAM,EAAE,KAAK;KACd;IACD,SAAS,EAAE;QACT,iBAAiB,EAAE;YACjB,IAAI,EAAE,QAAQ;YACd,MAAM,CAAC,MAAM;gBACX,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;gBAC9B,IAAI,CAAC,OAAO,CAAC;oBACX,GAAG,EAAE,MAAM;iBACZ,CAAC,CAAC;YACL,CAAC;SACF;KACF;IACD,QAAQ;QACN,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;QACpC,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;QAC5C,MAAM,MAAM,GAAG,aAAa,KAAK,MAAM,CAAC;QACxC,MAAM,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,MAAM,iBAAiB,GAAW;YAChC,CAAC,GAAG,MAAM,UAAU,CAAC,EAAE,MAAM;YAC7B,CAAC,GAAG,MAAM,YAAY,CAAC,EAAE,CAAC,MAAM,IAAI,UAAU,KAAK,QAAQ;YAC3D,CAAC,GAAG,MAAM,WAAW,CAAC,EAAE,CAAC,MAAM,IAAI,UAAU,KAAK,OAAO;YACzD,CAAC,GAAG,MAAM,UAAU,CAAC,EAAE,SAAS,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC;YACvD,CAAC,GAAG,MAAM,UAAU,CAAC,EAAE,SAAS,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC;YACvD,CAAC,GAAG,MAAM,UAAU,CAAC,EAAE,SAAS,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC;SACxD,CAAC;QACF,MAAM,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;aAClD,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC;aAC5C,IAAI,CAAC,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,OAAO,CAAC;YACX,cAAc;YACd,MAAM;YACN,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;SAC1B,CAAC,CAAC;QAEH,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;YAC1D,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;QACD,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IACD,OAAO,EAAE;QACP,iBAAiB;YACf,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;YAC1C,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAC3C,MAAM,cAAc,GAAG,EAAE,CAAC;YAC1B,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;YACf,IAAI,IAAI,GAAG,EAAE,OAAO,EAAE,CAAC;YACvB,OAAO,IAAI,CAAC,OAAO,EAAE;gBACnB,YAAY;gBACZ,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC1B,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;gBAC/B,KAAK,IAAI,CAAC,CAAC;gBACX,YAAY;gBACZ,MAAM,SAAS,GAAgC,UAAU,CAAC,KAAK,CAAC,CAAC;gBACjE,IAAI,SAAS,KAAK,SAAS,EAAE;oBAC3B,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;oBAC1B,IAAI,UAAU,CAAC,OAAO,EAAE;wBACtB,mBAAmB;wBACnB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;wBAC9C,IAAI,GAAG,UAAU,CAAC;qBACnB;yBAAM;wBACL,aAAa;wBACb,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,UAAU,KAAK,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;wBACrE,MAAM;qBACP;iBACF;qBAAM;oBACL,MAAM,KAAK,GACT,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,KAAU,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC;oBACpF,IAAI,GAAG,KAAK,CAAC;iBACd;aACF;YACD,IAAI,CAAC,OAAO,CAAC;gBACX,qBAAqB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;gBACzC,WAAW,EAAE,cAAc;aAC5B,CAAC,CAAC;QACL,CAAC;QAED,cAAc;YACZ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC;gBACpB,SAAS,EAAE,CAAC,CAAC;aACd,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,CAAC;gBACX,IAAI,EAAE,KAAK;aACZ,CAAC,CAAC;QACL,CAAC;QACD,gBAAgB,CAAC,MAAM;YACrB,MAAM,KAAK,GAAG,EAAE,CAAC,mBAAmB,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;YAClD,KAAK;iBACF,MAAM,CAAC,IAAI,MAAM,MAAM,CAAC;iBACxB,kBAAkB,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC1B,IAAI,CAAC,OAAO,CAAC;oBACX,GAAG,EAAE,GAAG,CAAC,MAAM;iBAChB,CAAC,CAAC;YACL,CAAC,CAAC;iBACD,IAAI,EAAE,CAAC;QACZ,CAAC;QAED,eAAe,CAAC,KAAa,EAAE,KAAU;YACvC,iDAAiD;YACjD,OAAO;YACP,MAAM,SAAS,GAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YACtE,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,OAAO,CAAC;gBACX,sBAAsB,EAAE,SAAS;aAClC,CAAC,CAAC;QACL,CAAC;QACD,YAAY;YACV,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;QACD,cAAc,CAAC,CAAC;YACd,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACpB,IAAI,CAAC,eAAe,CAClB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EACtB,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CACnE,CAAC;aACH;iBAAM;gBACL,MAAM,IAAI,GAAG;oBACX,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK;iBAC7E,CAAC;gBACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACnB,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE;oBACtD,IAAI,CAAC,aAAa,EAAE,CAAC;iBACtB;aACF;YAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;QACD,iBAAiB;;YACf,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACpB,IAAI,OAAO,GAAG,KAAK,CAAC;gBACpB,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE;oBACrC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,SAAS,CAAC;iBACvF;gBACD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,OAAO,EAAE;oBACpC,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAO,CAAC;oBACvF,OAAO,GAAG,UAAU,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC;iBAChD;gBACD,IAAI,CAAC,OAAO,CAAC;oBACX,aAAa,EAAE,OAAO;iBACvB,CAAC,CAAC;aACJ;iBAAM;gBACL,MAAM,OAAO,GAAG,CAAA,MAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,0CAAE,MAAM,MAAK,CAAC,CAAC;gBACjD,IAAI,CAAC,OAAO,CAAC;oBACX,aAAa,EAAE,OAAO;iBACvB,CAAC,CAAC;aACJ;QACH,CAAC;QACD,WAAW;YACT,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACpB,IAAI,CAAC,OAAO,CAAC;oBACX,SAAS,EAAE;wBACT,SAAS,EAAE,CAAC;wBACZ,UAAU,EAAE,EAAE;wBACd,MAAM,EAAE,EAAE;qBACX;iBACF,CAAC,CAAC;gBACH,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;aAC5D;QACH,CAAC;QACD,aAAa;YACX,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBACpB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;aAC7D;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACjD;YACD,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;QACD,cAAc,CAAC,CAAC;YACd,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5D,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;KACF;CACF,CAAC,CAAC","file":"dropdown-item.js","sourcesContent":["import TComponent from '../common/component';\nimport config from '../common/config';\n\nconst { prefix } = config;\nconst name = `${prefix}-dropdown-item`;\n\nTComponent({\n  properties: {\n    title: {\n      type: String,\n      value: '',\n    },\n    options: {\n      type: Array,\n      value: [],\n    },\n    selectMode: {\n      type: String,\n      value: 'single', // single | multi\n    },\n    optionsLayout: {\n      type: String,\n      value: 'columns', // columns | tree | slot\n    },\n    optionsColumns: {\n      type: Number,\n      optionalTypes: [String],\n      value: 1,\n    },\n    value: {\n      type: Array,\n      optionalTypes: [String, Number],\n      value: [],\n    },\n    disabled: {\n      type: Boolean,\n      value: false,\n    },\n    itemId: {\n      type: String,\n      value: '',\n    },\n  },\n  data: {\n    classBasePrefix: prefix,\n    classPrefix: name,\n    show: false,\n    isBtnDisabled: true,\n    bar: null,\n    top: 0,\n    contentClasses: '',\n    treeColumns: 3,\n    selected: [],\n    treeState: {\n      leafLevel: 0,\n      selectList: [],\n      select: [],\n    },\n    treeOptions: [],\n    isTree: false,\n  },\n  relations: {\n    './dropdown-menu': {\n      type: 'parent',\n      linked(target) {\n        this._getParentBottom(target);\n        this.setData({\n          bar: target,\n        });\n      },\n    },\n  },\n  attached() {\n    const { selectMode } = this.data;\n    const { optionsLayout } = this.data;\n    const layoutCol = +this.data.optionsColumns;\n    const isTree = optionsLayout === 'tree';\n    const treeCol = isTree ? +this.data.treeColumns : 0;\n    const contentClassesObj: Object = {\n      [`${prefix}-is-tree`]: isTree,\n      [`${prefix}-is-single`]: !isTree && selectMode === 'single',\n      [`${prefix}-is-multi`]: !isTree && selectMode === 'multi',\n      [`${prefix}-is-col1`]: layoutCol === 1 || treeCol === 1,\n      [`${prefix}-is-col2`]: layoutCol === 2 || treeCol === 2,\n      [`${prefix}-is-col3`]: layoutCol === 3 || treeCol === 3,\n    };\n    const contentClasses = Object.keys(contentClassesObj)\n      .filter((e) => contentClassesObj[e] === true)\n      .join(' ');\n    this.setData({\n      contentClasses,\n      isTree,\n      selected: this.data.value,\n    });\n\n    if (isTree) {\n      this.data.treeState.selectList = this.data.selected || [];\n      this._buildTreeOptions();\n    }\n    this.updateButtonState();\n  },\n  methods: {\n    _buildTreeOptions() {\n      const { options, selectMode } = this.data;\n      const { selectList } = this.data.treeState;\n      const newTreeOptions = [];\n      let level = -1;\n      let node = { options };\n      while (node.options) {\n        // 当前层级节点的列表\n        const list = node.options;\n        newTreeOptions.push([...list]);\n        level += 1;\n        // 当前层级列表选中项\n        const thisValue: [] | string | number | null = selectList[level];\n        if (thisValue === undefined) {\n          const [firstChild] = list;\n          if (firstChild.options) {\n            // 还有子节点，当前层级作为单选处理\n            this._selectTreeNode(level, firstChild.value);\n            node = firstChild;\n          } else {\n            // 没有子节点，结束处理\n            this._selectTreeNode(level, selectMode === 'multi' ? [] : undefined);\n            break;\n          }\n        } else {\n          const child: any =\n            !Array.isArray(thisValue) && list.find((child: any) => child.value === thisValue);\n          node = child;\n        }\n      }\n      this.setData({\n        'treeState.leafLevel': Math.max(0, level),\n        treeOptions: newTreeOptions,\n      });\n    },\n\n    _closeDropdown() {\n      this.data.bar.setData({\n        activeIdx: -1,\n      });\n      this.setData({\n        show: false,\n      });\n    },\n    _getParentBottom(parent) {\n      const query = wx.createSelectorQuery().in(parent);\n      query\n        .select(`#${prefix}-bar`)\n        .boundingClientRect((res) => {\n          this.setData({\n            top: res.bottom,\n          });\n        })\n        .exec();\n    },\n\n    _selectTreeNode(level: number, value: any) {\n      // console.log('level:', level, 'value:', value);\n      // 当前节点\n      const tempValue: any = this.data.treeState.selectList.slice(0, level);\n      tempValue[level] = value;\n      this.setData({\n        'treeState.selectList': tempValue,\n      });\n    },\n    clickOverlay() {\n      this._closeDropdown();\n    },\n    updateSelected(e) {\n      if (this.data.isTree) {\n        this._selectTreeNode(\n          e.target.dataset.level,\n          this.data.selectMode === 'single' ? e.detail.name : e.detail.names,\n        );\n      } else {\n        const data = {\n          selected: this.data.selectMode === 'single' ? e.detail.name : e.detail.names,\n        };\n        this.setData(data);\n        if (this.data.bar && this.data.selectMode === 'single') {\n          this.confirmSelect();\n        }\n      }\n\n      this.updateButtonState();\n    },\n    updateButtonState() {\n      if (this.data.isTree) {\n        let isEmpty = false;\n        if (this.data.selectMode === 'single') {\n          isEmpty = this.data.treeState.selectList[this.data.treeState.leafLevel] === undefined;\n        }\n        if (this.data.selectMode === 'multi') {\n          const selectList = this.data.treeState.selectList[this.data.treeState.leafLevel] as [];\n          isEmpty = selectList && selectList.length <= 0;\n        }\n        this.setData({\n          isBtnDisabled: isEmpty,\n        });\n      } else {\n        const isEmpty = this.data.selected?.length === 0;\n        this.setData({\n          isBtnDisabled: isEmpty,\n        });\n      }\n    },\n    resetSelect() {\n      if (this.data.isTree) {\n        this.setData({\n          treeState: {\n            leafLevel: 0,\n            selectList: [],\n            select: [],\n          },\n        });\n        this._buildTreeOptions();\n        this.updateButtonState();\n      } else {\n        this.updateSelected({ detail: { names: [], name: null } });\n      }\n    },\n    confirmSelect() {\n      if (this.data.isTree) {\n        this.triggerEvent('change', this.data.treeState.selectList);\n      } else {\n        this.triggerEvent('change', this.data.selected);\n      }\n      this._closeDropdown();\n    },\n    selectTreeNode(e) {\n      this._selectTreeNode(e.target.dataset.level, e.detail.name);\n      this._buildTreeOptions();\n    },\n  },\n});\n"]}