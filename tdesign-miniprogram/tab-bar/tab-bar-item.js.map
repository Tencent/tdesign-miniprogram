{"version":3,"sources":["../src/tab-bar/tab-bar-item.ts"],"names":[],"mappings":"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","file":"tab-bar-item.js","sourcesContent":["import { wxComponent, SuperComponent, RelationsOptions } from '../common/src/index';\nimport config from '../common/config';\nimport props from './tab-bar-item-props';\n\nconst { prefix } = config;\nconst classPrefix = `${prefix}-tab-bar-item`;\n\n@wxComponent()\nexport default class TabbarItem extends SuperComponent {\n  relations: RelationsOptions = {\n    './tab-bar': {\n      type: 'ancestor',\n      linked(parent) {\n        const [activeColor, color] = parent.data.color;\n        this.setData({\n          parent,\n          color,\n          activeColor,\n          currentName: this.properties.value ? this.properties.value : parent.initName(),\n        });\n        parent.updateChildren();\n      },\n    },\n  };\n\n  data = {\n    prefix,\n    classPrefix,\n    isSpread: false,\n    isChecked: false,\n    parent: null,\n    hasChildren: false,\n    currentName: '',\n    color: '',\n    activeColor: '',\n  };\n\n  properties = props;\n\n  observers = {\n    subTabBar(value: Record<string, any>[]) {\n      this.setData({\n        hasChildren: value.length > 0,\n      });\n    },\n  };\n\n  methods = {\n    showSpread() {\n      this.setData({\n        isSpread: true,\n      });\n    },\n    toggle() {\n      const { parent, currentName, hasChildren, isSpread } = this.data;\n\n      if (hasChildren) {\n        this.setData({\n          isSpread: !isSpread,\n        });\n      }\n      parent.updateValue(currentName);\n      parent.changeOtherSpread(currentName);\n    },\n    selectChild(event) {\n      const { parent, currentName } = this.data;\n      const childName = event.target.dataset.name;\n\n      if (!(Array.isArray(parent.value) && parent.value[1] === childName)) {\n        parent.updateValue([currentName, childName]);\n      }\n      this.setData({\n        isSpread: false,\n      });\n    },\n    checkActive(value) {\n      const { currentName, hasChildren } = this.data;\n      const isChecked = currentName === value;\n\n      if (hasChildren && Array.isArray(value)) {\n        return value.indexOf(currentName) > -1;\n      }\n\n      this.setData({\n        isChecked,\n      });\n    },\n    closeSpread() {\n      this.setData({\n        isSpread: false,\n      });\n    },\n  };\n}\n"]}