var STATUS = ['success', 'error', 'warning'];
var STATUS_TEXT = ['success', 'error', 'warning', 'active'];

var PRO_THEME = {
  LINE: 'line',
  PLUMP: 'plump',
  CIRCLE: 'circle',
};

var STATUS_COLOR = {
  success: '#00a870',
  error: '#e34d59',
  warning: '#ed7b2f',
};
var LINE_STATUS_ICON = {
  success: 'check-circle-filled',
  error: 'error-circle-filled',
  warning: 'error-circle-filled',
};
var CIRCLE_STATUS_ICON = {
  success: 'check',
  error: 'close',
  warning: 'error',
};

/**
 * 由于android和iOS在无障碍模式下，语音朗读有部分差异,  因此特殊处理
 * 1. android在同iOS有相同属性下，只读取aria-lable，不会读取aria-valuenow，需要给aria-lable 添加相应文案。
 *  （推翻1 ，不知道啥原因的影响，aria-valuenow 可读可不读 但是读的时候不会加%，因此需要aria-lable 加 %）
 * 2. iOS 会读取aria-label，同时也会读取aria-valuenow，会发出两次语音，因此也需要特殊处理。
 * 3. 对于动态朗读部分，优先读取用户自定义设置的airra-label，如果没有设置，则读取默认的文案。(文档中也需要提示用户两者的差异)
 */
var getIOSAriaLabel = function (status) {
  if (status === 'error') {
    return '进度失败';
  }
  if (status === 'warning') {
    return '进度异常';
  }
  return '';
};

var getAndroidAriaLabel = function (status, computedProgress) {
  if (status === 'error') {
    return '%' + '，进度失败';
  }
  if (status === 'warning') {
    return '%' + '，进度异常';
  }
  return '%';
};

module.exports = {
  STATUS: STATUS,
  STATUS_TEXT: STATUS_TEXT,
  PRO_THEME: PRO_THEME,
  STATUS_COLOR: STATUS_COLOR,
  LINE_STATUS_ICON: LINE_STATUS_ICON,
  CIRCLE_STATUS_ICON: CIRCLE_STATUS_ICON,
  getAndroidAriaLabel: getAndroidAriaLabel,
  getIOSAriaLabel: getIOSAriaLabel,
};
